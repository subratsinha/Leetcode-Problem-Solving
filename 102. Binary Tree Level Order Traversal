Given the root of a binary tree, return the level order traversal of its nodes' values. (i.e., from left to right, level by level).

 

Example 1:


Input: root = [3,9,20,null,null,15,7]
Output: [[3],[9,20],[15,7]]
Example 2:

Input: root = [1]
Output: [[1]]
Example 3:

Input: root = []
Output: []


/////////////////////////////////////////////////////////////////////////////////// SOLUTION ///////////////////////////////////////////////////////////////////////////////

class Solution {
public:
vector<vector<int>> levelOrder(TreeNode* root)
{
	vector<vector<int>> result;
	recur_levelOrder(result, root, 0);
	return result;
}

void recur_levelOrder(vector<vector<int>> &result, TreeNode *root, int level)
{
	if (!root)
	{
    	return;
    }
    
    if ((level+1) > result.size())
    {
	    result.push_back(vector<int> {});
    }
    
    result[level].push_back(root->val);
    recur_levelOrder(result, root->left, level+1);
    recur_levelOrder(result, root->right, level+1);
}
};
